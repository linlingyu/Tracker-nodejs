var utility = require('utility/utility'),
    MapList = require('MapList'),
    Referer = require('Referer'),
    Code = require('Code'),
    codeList = new MapList(),
    mapList = new MapList();

function CodeController(){
    
}

utility.defineProperties(CodeController.prototype, {
    assignMsg: function(socketId, data){
        var code, referer;
        data.forEach(function(item){
            code = codeList.get('codeId_' + item.ident);
            if(!code){return;}
            switch(item.type){
                case 'trackerStart':
                    referer = mapList.get(socketId);
                    if(!referer){
                        referer = new Referer(socketId, item);
                        mapList.put(referer.getRefererId(), referer);
                    }
                    referer.addCode(code.getCodeId());
                    code.setReferer(referer);
                    code.setStartTime(item.time);
                    break;
                case 'tracker':
                    code.addArrivalId(item.arrivalId);
                    
                    break;
                case 'trackerEnd':
                    code.setEndTime(item.time);
                    break;
                default: break;
            }
        });
        
    },
    
    buildCode: function(data){
        var code = new Code(data.origContent, data);
        codeList.put(code.getCodeId(), code);
    },
    
    
    getMapList: function(){
        return mapList;
    },
    
    getCodeList: function(){
        return codeList;
    }
});



exports.create = function(){
    return new CodeController();
}