var utility = require('utility/utility'),
    rTracker = /_tracker_\(["'\d]+,\s(\d+)\)/;

function Code(content, options){
    var me = this,
        opts = me._options = utility.extend({
            url : '-'
        }, options || {}),
        origContent = me._origContent = content || '',//原始代码
        execContent = me._execContent = opts.execContent || '';//页面可执行代码

    me._codeId = 'codeId_' + (opts.ident || utility.getIdent());
    me._formattedCode = utility.splitToLine(opts.formattedContent);//代码格式化成行
//    me._executeMapping = new Array(me._formattedCode.length);//对应行的执行情况
    me._arrivalGroupMap = opts.mapping//tracker Id 对应的行数映射关系
    me._arrivalMapping = {};//记录已经执行过的行数
    me._status = true;//正常
    me._url = opts.url;
    me._fileName = utility.fileName(opts.url);
    
    me._refererId =
    me._startTime =
    me._endTime = null;
    me._loadTime = opts.loadTime;
    
    me._fnList = [];
}
utility.defineProperties(Code.prototype, {
    getCodeId: function(){
        return this._codeId;
    },
    
    getOrigCode: function(){
        return this._origContent;
    },
    
    getFormattedCode: function(){
        return this._formattedCode;
    },
    
    getArrivalMapping: function(){
        return this._arrivalMapping;
    },
    
    getArrivalGroupMap: function(){
        return this._arrivalGroupMap;
    },
    
    setReferer: function(refererId){
        this._refererId = refererId;
    },
    
    setStartTime: function(start){
        this._startTime = new Date(parseInt(start));
    },
    
    getStartTime: function(){
        return this._startTime;
    },
    
    setEndTime: function(end){
        this._endTime = new Date(parseInt(end));
    },
    
    getEndTime: function(){
        return this._endTime;
    },
    
    setStatus: function(bool){
        this._status = !!bool;
    },
    
    getStatus: function(){
        return this._status;
    },
    
    getLoadTime: function(){
        return this._loadTime;
    },
    
    addArrivalId: function(arrivalId){
        var me = this;
        me._arrivalMapping[arrivalId] = me._arrivalGroupMap[arrivalId];
    },
    
    getFileName: function(){
        return this._fileName;
    },
    
    getUrl: function(){
        return this._url;
    },
    
    getExecuteCount: function(){
        var me = this,
            arrivalMapping = me._arrivalMapping,
            count = {},
            item;
        for(var i in arrivalMapping){
            item = arrivalMapping[i];
            count[i] = 1;
            for(j in item){
                count[j] = 1;
            }
        }
        return Object.keys(count).length;
    },
    
    addFn: function(ident){
        this._fnList.push(ident);
    },
    
    getFnList: function(){
        return this._fnList;
    }
});

module.exports = Code;