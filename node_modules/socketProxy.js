var util = require('util'),
    events = require('events'),
    utility = require('utility/utility');
function SocketProxy(socketServer){
    events.EventEmitter.call(this);
    this._socketServer = socketServer;
}
util.inherits(SocketProxy, events.EventEmitter);
utility.defineProperties(SocketProxy.prototype, {
    initialize: function(codeController){
        var me = this,
            socketServer = me._socketServer;
        socketServer.on('send', function(args){
            var socket = args.socket,
                socketId = socket.id,
                data = args.data;
            codeController.assignMsg(socketId, data);
//            me.emit('send:arrival', {
//                socket: socket,
//                mapList: codeController.getMapList(),
//                codeList: codeController.getCodeList()
//            });
        });
        socketServer.on('pageload', function(args){
            me.emit('pageload', {
                socket: args.socket,
                mapList: codeController.getMapList(),
                codeList: codeController.getCodeList()
            });
        });
    },
    
    start: function(socketServer){
        this._socketServer.start(socketServer);
    },
    
    stop: function(){
        
    }
});

exports.create = function(socketServer){
    return new SocketProxy(socketServer);
}