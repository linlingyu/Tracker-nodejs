var config = require('config'),
    util = require('util'),
    utility = require('utility/utility'),
    events = require('events'),
    socketio = require('socket.io');

function SocketServer(){
    events.EventEmitter.call(this);
}
util.inherits(SocketServer, events.EventEmitter);
utility.defineProperties(SocketServer.prototype, {
    start: function(port){
        var me = this,
            socketIo = socketio.listen(port || config.socketServer.port, {
                'log level': 0,
                'browser client minification': true
            });
        //
        socketIo.sockets.on('connection', function(socket){
            socket.emit('ready', {ready: true});
            socket.on('send', function(data){
                me.emit('send', {socket: socket, data: data});
            });
            socket.on('pageload', function(){
                me.emit('pageload', {socket: socket});
            });
        });
        return me;
    },
    
    stop: function(){
        
    }
});

exports.create = function(){
    return new SocketServer();
}